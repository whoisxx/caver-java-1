buildscript {
    ext.javapoetVersion = '1.7.0'
    ext.web3jVersion = '4.6.0'
    ext.picocliVersion = '3.0.0'
    ext.junitVersion = '4.12'
    ext.slf4jVersion = '1.7.25'
    ext.ipfsVersion = '1.3.3'
}

plugins {
    id 'java'

    id 'maven-publish'
    id 'signing'
    id 'idea'

    id 'io.codearte.nexus-staging' version "0.30.0"
}

//It should only be applied on the ROOT project in a build.
apply plugin: 'io.codearte.nexus-staging'


allprojects {
    version '1.6.1'
    group 'com.klaytn.caver'
    description 'caver-java project'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    javadoc {
        options.encoding = 'UTF-8'
    }

    dependencies {
        testCompile "junit:junit:$junitVersion"
        testCompile "ch.qos.logback:logback-core:1.2.3",
                "ch.qos.logback:logback-classic:1.2.3"
    }
}

configure(subprojects.findAll {it.name != 'integration-test' }) {
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    // Deploy
    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    ext {
        ossrhUsername = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : System.getenv('OSSRH_USERNAME')
        ossrhPassword = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : System.getenv('OSSRH_PASSWORD')
        ossrhSigningKey_base64 = project.hasProperty('signingKey')? project.property('signingKey') : System.getenv('ORG_GRADLE_PROJECT_signingKey')
        ossrhSigningPassword = project.hasProperty('signingKey')? project.property('signingPassword') : System.getenv('ORG_GRADLE_PROJECT_signingPassword')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = project.name
                    description = project.description
                    version = project.version
                    url = "https://docs.klaytn.com/"
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                            distribution = "repo"
                        }
                    }
                    developers {
                        developer {
                            id = "KlaytnDev"
                            name = "caver-java Authors"
                            email = "developer@klaytn.com"
                        }
                    }
                    scm {
                        connection = "scm:git:https://*.git"
                        developerConnection = "scm:git://*.git"
                        url = "https://*.git"
                    }
                }
            }
        }
        repositories {
            maven {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    signing {
        def signingPassword = ossrhSigningPassword

        def signingKey_base64 = ossrhSigningKey_base64
        def signingKey = (signingKey_base64 == null? null:
                new String(Base64.getMimeDecoder().decode(signingKey_base64.toString()), "utf-8"))

        useInMemoryPgpKeys(signingKey, signingPassword)

        sign publishing.publications.mavenJava
    }

    nexusStaging {
        username= ossrhUsername
        password= ossrhPassword
    }
}